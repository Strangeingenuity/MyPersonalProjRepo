b"Public Without Sharing Class AccountTriggerHandlerTyaga {\r\n\r\n   \r\n    Public Static Void afterUpdate (List<Account> NewAcc, Map<Id,Account> OldMap){\r\n        //List<Account> NewAcc1 = New List<Account>();\r\n        //Map<Id,Account> Oldmap1 = New Map<Id,Account> ();\r\n        //Oldmap1 = OldMap;\r\n        //some more test code\r\n        //again more code\r\n        //and more code \r\n        String CountryCd;\r\n        system.debug('Tyaga I am here 0000');\r\n        List<Account> AccTbd = New List<Account>();\r\n        for (Account acc : NewAcc) {\r\n            if (OldMap!= null && Oldmap.get(acc.Id).SourceForWsCall__c != acc.SourceForWsCall__c)\r\n                { \r\n                AccTbd.add(acc);\r\n                \r\n                }\r\n           else\r\n               {\r\n                    Continue; \r\n               }\r\n         }//End of For\r\n    \r\n    if(AccTbd.size() > 0)\r\n        {\r\n         system.debug('Tyaga I am here before the webservice call');\r\n         String IP = AccTbd[0].SourceForWsCall__c ;\r\n         WebserviceCall(IP,countryCd);\r\n         //AccTbd[0].WebSerField__c= CountryCd;\r\n         //System.debug('So the address of the country is' + Registeradd);\r\n         system.debug('Tyaga I am here after the web service call'+countryCd);\r\n        }\r\n    \r\n    }//end of after Update function\r\n\r\n    //Webservice Call Function\r\n   @Future(callout=true)\r\n   Public static Void WebserviceCall(String IP, string CountryCd){ \r\n         wwwWebservicexNet.GeoIPServiceSoap MyTestStub = new wwwWebservicexNet.GeoIPServiceSoap();\r\n         wwwWebservicexNet.GeoIP Responce = new wwwWebservicexNet.GeoIP();\r\n         //String IP = AccTbd[0].SourceForWsCall__c ;\r\n         Responce = MyTestStub.GetGeoIP(IP);\r\n         CountryCd =  Responce.CountryCode;\r\n         system.debug('This is the Country Code'+Responce.CountryCode);\r\n         //System.debug('So the address of the country is' + Registeradd);\r\n         //This below statement will never run because, there will be no return from a @future web service call\r\n         system.debug('Tyaga I am here inside the webservice call '+CountryCd);\r\n         return;\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    //docSample.DocSamplePort stub = new docSample.DocSamplePort();\r\n    //stub.inputHttpHeaders_x = new Map<String, String>();\r\n\r\n\r\n\r\n\r\n/*\r\n//Setting a basic authentication header\r\n\r\nstub.inputHttpHeaders_x.put('Authorization', 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==');\r\n\r\n//Setting a cookie header\r\nstub.inputHttpHeaders_x.put('Cookie', 'name=value');\r\n\r\n//Setting a custom HTTP header\r\nstub.inputHttpHeaders_x.put('myHeader', 'myValue');\r\n\r\nString input = 'This is the input string';\r\nString output = stub.EchoString(input);\r\n*/    \r\n  \r\n\r\n}//end of Class"